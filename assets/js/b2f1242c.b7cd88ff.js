"use strict";(self.webpackChunkkomple_documentation=self.webpackChunkkomple_documentation||[]).push([[213],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>p});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=r.createContext({}),s=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(a),p=n,f=c["".concat(d,".").concat(p)]||c[p]||m[p]||o;return a?r.createElement(f,l(l({ref:t},u),{},{components:a})):r.createElement(f,l({ref:t},u))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=c;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},9428:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));const o={},l="Metadata Module",i={unversionedId:"komple-framework/modules/Metadata-Module",id:"komple-framework/modules/Metadata-Module",title:"Metadata Module",description:"Metadata contract allows projects to have several types of metadata for different needs.",source:"@site/docs/komple-framework/modules/05-Metadata-Module.md",sourceDirName:"komple-framework/modules",slug:"/komple-framework/modules/Metadata-Module",permalink:"/komple-docs/komple-framework/modules/Metadata-Module",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Merge Module",permalink:"/komple-docs/komple-framework/modules/Merge-Module"},next:{title:"Mint Module",permalink:"/komple-docs/komple-framework/modules/Mint-Module"}},d={},s=[{value:"Metadata Types",id:"metadata-types",level:2},{value:"Standard Metadata",id:"standard-metadata",level:3},{value:"Shared Metadata",id:"shared-metadata",level:3},{value:"Dynamic Metadata",id:"dynamic-metadata",level:3}],u={toc:s};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"metadata-module"},"Metadata Module"),(0,n.kt)("p",null,"Metadata contract allows projects to have several types of metadata for different needs."),(0,n.kt)("p",null,"Usually the metadata for a token can be stored either on-chain or in a decentralized storage service. In either case it's important that the data is stored in a decentralized platform."),(0,n.kt)("h2",{id:"metadata-types"},"Metadata Types"),(0,n.kt)("p",null,"There are several types of metadata for different use cases."),(0,n.kt)("h3",{id:"standard-metadata"},"Standard Metadata"),(0,n.kt)("p",null,"One to One metadata is used for normal NFTs that we are all familiar with. Every token is linked to a single metadata."),(0,n.kt)("p",null,"Some examples would be:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A single playing card token in a deck collection"),(0,n.kt)("li",{parentName:"ul"},"A single color token in colors collection")),(0,n.kt)("p",null,"These are all unique - tokens don't share metadata with other tokens and can be minted by a single user."),(0,n.kt)("h3",{id:"shared-metadata"},"Shared Metadata"),(0,n.kt)("p",null,"Static metadata is used for using the same metadata for multiple tokens."),(0,n.kt)("p",null,"Some examples would be:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A knife token that is minted by 100 users"),(0,n.kt)("li",{parentName:"ul"},"A spell token that is minted by 50 users")),(0,n.kt)("p",null,"Still the tokens are unique when minted but the metadata are the same. Instead of duplicating the metadata for every token, it uses a base metadata for each one."),(0,n.kt)("h3",{id:"dynamic-metadata"},"Dynamic Metadata"),(0,n.kt)("p",null,"Dynamic metadata is used for using a base metadata for tokens but dynamically change their attributes."),(0,n.kt)("p",null,"Some examples would be:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A sword token that is minted but upgraded over time"),(0,n.kt)("li",{parentName:"ul"},"A hero token that engages in battles and loses health")),(0,n.kt)("p",null,"This is similar to static metadata in a way that these can be minted by many users but with extra possibilities. Since it's designed to be dynamic, it is not linked to the original metadata - making updates easier."))}m.isMDXComponent=!0}}]);